/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import { Button, Dialog } from '@mui/material';
import { styled } from '@mui/material/styles';


const TypeQuest = styled("div")(({ theme }) => ({
    backgroundColor: `rgba(255, 255, 255, 1)`,
    boxShadow: `0px 1px 18px rgba(0, 0, 0, 0.12), 0px 6px 10px rgba(0, 0, 0, 0.14), 0px 3px 5px rgba(0, 0, 0, 0.2)`,
    borderRadius: `8px`,
    display: `flex`,
    flexDirection: `column`,
    height: `171px`,
    width: `500px`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    padding: `0px`,
    boxSizing: `border-box`,
    overflow: `hidden`,
}));

const Content = styled("div")({
    display: `flex`,
    flexDirection: `column`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    gap: `14px`,
    padding: `30px 40px`,
    boxSizing: `border-box`,
    alignSelf: `stretch`,
});

const Top = styled("div")({
    display: `flex`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    gap: `14px`,
    padding: `0px`,
    boxSizing: `border-box`,
    alignSelf: `stretch`,
});

const Details = styled("div")({
    display: `flex`,
    flexDirection: `column`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    gap: `12px`,
    padding: `0px`,
    boxSizing: `border-box`,
    flexGrow: `1`,
});

const DeseasRenunciarAEste = styled("div")(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    color: `rgba(0, 0, 0, 0.87)`,
    fontStyle: `normal`,
    fontFamily: `Heebo`,
    fontWeight: `700`,
    fontSize: `20px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    textTransform: `none`,
    alignSelf: `stretch`,
}));

const FrameX = styled("div")({
    display: `flex`,
    flexDirection: `row`,
    justifyContent: `flex-end`,
    alignItems: `flex-start`,
    padding: `0px`,
    boxSizing: `border-box`,
    width: `1px`,
    height: `20px`,
    cursor: `pointer`,
});

const X = styled("img")({
    height: `12px`,
    width: `12px`,
});

const Cta = styled("div")(({ theme }) => ({
    backgroundColor: `rgba(0, 0, 0, 0.04)`,
    display: `flex`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    gap: `14px`,
    padding: `20px 40px`,
    boxSizing: `border-box`,
    alignSelf: `stretch`,
}));

const Links = styled("div")({
    display: `flex`,
    flexDirection: `row`,
    justifyContent: `flex-end`,
    alignItems: `center`,
    gap: `20px`,
    padding: `0px`,
    boxSizing: `border-box`,
    flexGrow: `1`,
});

const Link1 = styled("div")({
    display: `flex`,
    flexDirection: `column`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    padding: `0px`,
    boxSizing: `border-box`,
    cursor: `pointer`,
});

const Cancelar = styled("div")(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    color: `rgba(25, 118, 210, 1)`,
    fontStyle: `normal`,
    fontFamily: `Roboto`,
    fontWeight: `400`,
    fontSize: `16px`,
    letterSpacing: `0.15000000596046448px`,
    textDecoration: `none`,
    lineHeight: `150%`,
    textTransform: `none`,
}));

function ConfirmModal(props) {
    return (
        <Dialog open={props.isOpen} onClose={() => props.setIsOpen(false)} >
            <TypeQuest >
                <Content >
                    <Top >
                        <Details >
                            <DeseasRenunciarAEste >
                                {props.text}
                            </DeseasRenunciarAEste>
                        </Details>
                        <FrameX onClick={() => props.setIsOpen(false)}>
                            <X src={"/assets/img/x.png"} alt={"x"} />
                        </FrameX>
                    </Top>
                </Content>
                <Cta >
                    <Links >
                        <Link1 onClick={() => props.setIsOpen(false)}>
                            <Cancelar >
                                {`Cancelar`}
                            </Cancelar>
                        </Link1>
                        <Button variant="contained" size="large" color="primary" onClick={props.buttonAction}  > {props.buttonText} </Button>
                    </Links>
                </Cta>
            </TypeQuest>
        </Dialog>
    );
}

export default ConfirmModal;
