/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import { FileDownloadOutlined, MailOutlined } from "@mui/icons-material";
import { Button, Dialog } from "@mui/material";
import { styled } from "@mui/material/styles";

const EmployeeReportModal1 = styled("div")(({ theme }) => ({
    backgroundColor: `rgba(255, 255, 255, 1)`,
    boxShadow: `0px 1px 18px rgba(0, 0, 0, 0.12), 0px 6px 10px rgba(0, 0, 0, 0.14), 0px 3px 5px rgba(0, 0, 0, 0.2)`,
    borderRadius: `8px`,
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `column`,
    width: `436px`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    padding: `0px`,
    boxSizing: `border-box`,
    overflow: `hidden`,
}));

const Content = styled("div")({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `column`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    padding: `40px 40px 0px 40px`,
    boxSizing: `border-box`,
    alignSelf: `stretch`,
    margin: `0px`,
});

const FrameX = styled("div")({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `flex-end`,
    alignItems: `flex-start`,
    padding: `0px`,
    boxSizing: `border-box`,
    alignSelf: `stretch`,
    height: `20px`,
    margin: `0px`,
    cursor: `pointer`,
});

const X = styled("img")({
    height: `12px`,
    width: `12px`,
    margin: `0px`,
});

const Frame1 = styled("div")({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `column`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    padding: `0px`,
    boxSizing: `border-box`,
    margin: `0px`,
});

const Icon1 = styled("div")({
    backgroundColor: `rgba(22, 107, 169, 0.13)`,
    borderRadius: `60px`,
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `center`,
    alignItems: `center`,
    padding: `0px`,
    boxSizing: `border-box`,
    height: `54px`,
    width: `54px`,
    margin: `0px`,
    overflow: `hidden`,
});

const Vector = styled("img")({
    height: `20px`,
    width: `26px`,
    margin: `0px`,
});

const Group2 = styled("div")({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    padding: `0px`,
    boxSizing: `border-box`,
    height: `70px`,
    width: `339px`,
    margin: `30px 0px 0px 0px`,
});

const Details = styled("div")({
    display: `flex`,
    position: `absolute`,
    isolation: `isolate`,
    flexDirection: `column`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    padding: `0px 10px`,
    boxSizing: `border-box`,
    left: `15px`,
    top: `0px`,
});

const NameAndTitle = styled("div")({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `column`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    padding: `0px`,
    boxSizing: `border-box`,
    margin: `0px`,
});

const ReporteDePagoGenerad = styled("div")(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    color: `rgba(0, 0, 0, 0.87)`,
    fontStyle: `normal`,
    fontFamily: `Heebo`,
    fontWeight: `700`,
    fontSize: `24px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    textTransform: `none`,
    margin: `0px`,
}));

const Details1 = styled("div")({
    display: `flex`,
    position: `absolute`,
    isolation: `isolate`,
    flexDirection: `column`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    padding: `0px 10px`,
    boxSizing: `border-box`,
    left: `0px`,
    top: `35px`,
});

const NameAndTitle1 = styled("div")({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `column`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    height: `35px`,
    margin: `0px`,
});

const Cta = styled("div")({
    backgroundColor: `rgba(245, 245, 245, 1)`,
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `center`,
    alignItems: `center`,
    padding: `0px 40px`,
    boxSizing: `border-box`,
    alignSelf: `stretch`,
    height: `62px`,
    margin: `0px`,
});

const Frame3 = styled("div")({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `center`,
    alignItems: `center`,
    padding: `0px`,
    boxSizing: `border-box`,
    width: `391px`,
    margin: `0px`,
});

const ButtonOutlined = styled(Button)({
    width: `190px`,
    margin: `0px`,
});

const ButtonOutlined1 = styled(Button)({
    width: `193px`,
    margin: `0px 0px 0px 14px`,
});

function EmployeeReportModal(props) {
    return (
        <Dialog open={props.isOpen} onClose={() => props.setIsOpen(false)}>
            <EmployeeReportModal1>
                <Content>
                    <FrameX onClick={() => props.setIsOpen(false)}>
                        <X src="/assets/img/x.png" alt={"x"} />
                    </FrameX>
                    <Frame1>
                        <Icon1>
                            <Vector
                                src="/assets/img/checkBlue.png"
                                alt={"check"}
                            />
                        </Icon1>
                        <Group2>
                            <Details>
                                <NameAndTitle>
                                    <ReporteDePagoGenerad>
                                        {`Reporte de Pago generado`}
                                    </ReporteDePagoGenerad>
                                </NameAndTitle>
                            </Details>
                            <Details1>
                                <NameAndTitle1></NameAndTitle1>
                            </Details1>
                        </Group2>
                    </Frame1>
                </Content>
                <Cta>
                    <Frame3>
                        <ButtonOutlined
                            variant="outlined"
                            size="large"
                            color="primary"
                            endIcon={<FileDownloadOutlined color="primary" />}
                            onClick={() => props.download(props.downloadData)}
                        >
                            DESCARGAR
                        </ButtonOutlined>
                        <ButtonOutlined1
                            variant="outlined"
                            size="large"
                            color="primary"
                            endIcon={<MailOutlined color="primary" />}
                            onClick={() => props.download(props.downloadData, true)}
                        >
                            ENVIAR CORREO
                        </ButtonOutlined1>
                    </Frame3>
                </Cta>
            </EmployeeReportModal1>
        </Dialog>
    );
}

export default EmployeeReportModal;
