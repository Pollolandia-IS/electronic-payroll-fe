generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model aplica_b {
  cedulaEmpleado  String     @db.VarChar(12)
  fechaHora       DateTime   @db.DateTime
  cedulaJuridica  String     @db.VarChar(12)
  nombreProyecto  String     @db.VarChar(100)
  nombreBeneficio String     @db.VarChar(100)
  pago            pago       @relation(fields: [cedulaEmpleado, fechaHora], references: [cedulaEmpleado, fechaHora], onUpdate: NoAction, map: "FK__aplica_b__40058253")
  beneficios      beneficios @relation(fields: [cedulaJuridica, nombreProyecto, nombreBeneficio], references: [cedulaJuridica, nombreProyecto, nombreBeneficio], onDelete: Cascade, map: "FK__aplica_b__3F115E1A")

  @@id([cedulaEmpleado, fechaHora, cedulaJuridica, nombreProyecto, nombreBeneficio], map: "PK__aplica_b__83C60FEBF5699954")
}

model aplica_do {
  cedulaEmpleado       String               @db.VarChar(12)
  fechaHora            DateTime             @db.DateTime
  nombreDO             String               @db.VarChar(150)
  pago                 pago                 @relation(fields: [cedulaEmpleado, fechaHora], references: [cedulaEmpleado, fechaHora], onDelete: Cascade, map: "FK__aplica_do__2FCF1A8A")
  deduccionObligatoria deduccionObligatoria @relation(fields: [nombreDO], references: [nombre], onDelete: Cascade, map: "FK__aplica_do__nombr__30C33EC3")

  @@id([cedulaEmpleado, fechaHora, nombreDO], map: "PK__aplica_d__7A7DC79C1072663E")
}

model aplica_dv {
  cedulaEmpleado      String              @db.VarChar(12)
  fechaHora           DateTime            @db.DateTime
  cedulaJuridica      String              @db.VarChar(12)
  nombreProyecto      String              @db.VarChar(100)
  nombreDeduccion     String              @db.VarChar(100)
  pago                pago                @relation(fields: [cedulaEmpleado, fechaHora], references: [cedulaEmpleado, fechaHora], onUpdate: NoAction, map: "FK__aplica_dv__2CF2ADDF")
  deduccionVoluntaria deduccionVoluntaria @relation(fields: [cedulaJuridica, nombreProyecto, nombreDeduccion], references: [cedulaJuridica, nombreProyecto, nombreDeduccion], onDelete: Cascade, map: "FK__aplica_dv__2BFE89A6")

  @@id([cedulaEmpleado, fechaHora, cedulaJuridica, nombreProyecto, nombreDeduccion], map: "PK__aplica_d__A195D317DB2A2C97")
}

model beneficios {
  cedulaJuridica  String       @db.VarChar(12)
  nombreProyecto  String       @db.VarChar(100)
  nombreBeneficio String       @db.VarChar(100)
  montoPago       Float?
  descripcion     String?      @db.Text
  habilitado      Boolean?
  proyecto        proyecto     @relation(fields: [cedulaJuridica, nombreProyecto], references: [cedulaJuridica, nombre], onDelete: Cascade, map: "FK__beneficios__08B54D69")
  aplica_b        aplica_b[]
  selecciona      selecciona[]

  @@id([cedulaJuridica, nombreProyecto, nombreBeneficio], map: "PK__benefici__AC9FC4E05FF8B53F")
}

model credenciales {
  email       String     @id(map: "PK__credenci__AB6E6165E6458636") @db.VarChar(100)
  contrasenna String?    @db.VarChar(256)
  verificado  Boolean?
  hace_uso    hace_uso[]
}

model deduccionObligatoria {
  nombre     String      @id(map: "PK__deduccio__72AFBCC72481914B") @db.VarChar(150)
  porcentaje Float?
  aplica_do  aplica_do[]
}

model deduccionVoluntaria {
  cedulaJuridica  String      @db.VarChar(12)
  nombreProyecto  String      @db.VarChar(100)
  nombreDeduccion String      @db.VarChar(100)
  descripcion     String?     @db.Text
  monto           Float?
  habilitado      Boolean?
  proyecto        proyecto    @relation(fields: [cedulaJuridica, nombreProyecto], references: [cedulaJuridica, nombre], onDelete: Cascade, map: "FK__deduccionVolunta__797309D9")
  aplica_dv       aplica_dv[]
  escoge          escoge[]

  @@id([cedulaJuridica, nombreProyecto, nombreDeduccion], map: "PK__deduccio__FF4338C2147CF1BE")
}

model empleado {
  cedula         String         @id(map: "PK__empleado__415B7BE4A368BBB5") @db.VarChar(12)
  cedulaJuridica String?        @db.VarChar(12)
  persona        persona        @relation(fields: [cedula], references: [cedula], onUpdate: NoAction, map: "FK__empleado__cedula__72C60C4A")
  empresa        empresa?       @relation(fields: [cedulaJuridica], references: [cedulaJuridica], onDelete: Cascade, map: "FK__empleado__cedula__73BA3083")
  escoge         escoge[]
  esContratado   esContratado[]
  pago           pago[]
  reporteHoras   reporteHoras[]
  selecciona     selecciona[]
}

model empleador {
  cedula       String         @id(map: "PK__empleado__415B7BE4B58C0B2C") @db.VarChar(12)
  persona      persona        @relation(fields: [cedula], references: [cedula], onDelete: Cascade, map: "FK__empleador__cedul__6477ECF3")
  empresa      empresa[]
  reporteHoras reporteHoras[]
}

model empresa {
  cedulaJuridica  String     @id(map: "PK__empresa__DD9A4FB55F0B6970") @db.VarChar(12)
  direccion       String?    @db.Text
  razonSocial     String?    @db.VarChar(250)
  email           String?    @db.VarChar(100)
  telefono        String?    @db.VarChar(50)
  cedulaEmpleador String?    @db.VarChar(12)
  empleador       empleador? @relation(fields: [cedulaEmpleador], references: [cedula], onDelete: Cascade, map: "FK__empresa__cedulaE__6754599E")
  empleado        empleado[]
  proyecto        proyecto[]
}

model escoge {
  cedulaEmpleado      String              @db.VarChar(12)
  cedulaJuridica      String              @db.VarChar(12)
  nombreProyecto      String              @db.VarChar(100)
  nombreDeduccion     String              @db.VarChar(100)
  aporte              Float?
  empleado            empleado            @relation(fields: [cedulaEmpleado], references: [cedula], onUpdate: NoAction, map: "FK__escoge__cedulaEm__1DB06A4F")
  deduccionVoluntaria deduccionVoluntaria @relation(fields: [cedulaJuridica, nombreProyecto, nombreDeduccion], references: [cedulaJuridica, nombreProyecto, nombreDeduccion], onDelete: Cascade, map: "FK__escoge__1CBC4616")

  @@id([cedulaEmpleado, cedulaJuridica, nombreProyecto, nombreDeduccion], map: "PK__escoge__B3780483398EF7C1")
}

model esContratado {
  cedulaJuridica String    @db.VarChar(12)
  nombreProyecto String    @db.VarChar(100)
  cedulaEmpleado String    @db.VarChar(12)
  tipoEmpleado   String?   @db.VarChar(25)
  puesto         String?   @db.VarChar(100)
  fechaInicio    DateTime? @db.Date
  fechaFin       DateTime? @db.Date
  jornada        String?   @db.VarChar(100)
  salario        Float?
  empleado       empleado  @relation(fields: [cedulaEmpleado], references: [cedula], onUpdate: NoAction, map: "FK__esContrat__cedul__00200768")
  proyecto       proyecto  @relation(fields: [cedulaJuridica, nombreProyecto], references: [cedulaJuridica, nombre], onDelete: Cascade, map: "FK__esContratado__01142BA1")

  @@id([cedulaJuridica, nombreProyecto, cedulaEmpleado], map: "PK__esContra__C9634E46D4791430")
}

model genera {
  cedulaEmpleado String   @db.VarChar(12)
  fechaHora      DateTime @db.DateTime
  cedulaJuridica String   @db.VarChar(12)
  nombreProyecto String   @db.VarChar(100)
  pago           pago     @relation(fields: [cedulaEmpleado, fechaHora], references: [cedulaEmpleado, fechaHora], onUpdate: NoAction, map: "FK__genera__25518C17")
  proyecto       proyecto @relation(fields: [cedulaJuridica, nombreProyecto], references: [cedulaJuridica, nombre], onDelete: Cascade, map: "FK__genera__245D67DE")

  @@id([cedulaEmpleado, fechaHora, cedulaJuridica, nombreProyecto], map: "PK__genera__12AD7FED9F534658")
}

model hace_uso {
  cedula       String       @db.VarChar(12)
  email        String       @db.VarChar(100)
  persona      persona      @relation(fields: [cedula], references: [cedula], onDelete: Cascade, map: "FK__hace_uso__cedula__60A75C0F")
  credenciales credenciales @relation(fields: [email], references: [email], onDelete: Cascade, map: "FK__hace_uso__email__619B8048")

  @@id([cedula, email], map: "PK__hace_uso__0BED9DF2EF0B4330")
}

model pago {
  cedulaEmpleado         String      @db.VarChar(12)
  fechaHora              DateTime    @db.DateTime
  salarioBruto           Float?
  salarioNeto            Float?
  deduccionesEmpleado    String?     @db.Text
  deduccionesPatrono     String?     @db.Text
  beneficios             String?     @db.Text
  deduccionesVoluntarias String?     @db.Text
  empleado               empleado    @relation(fields: [cedulaEmpleado], references: [cedula], onDelete: Cascade, map: "FK__pago__cedulaEmpl__05D8E0BE")
  aplica_b               aplica_b[]
  aplica_do              aplica_do[]
  aplica_dv              aplica_dv[]
  genera                 genera[]

  @@id([cedulaEmpleado, fechaHora], map: "PK__pago__626A902F921C11AA")
}

model persona {
  cedula    String     @id(map: "PK__persona__415B7BE4B585D3ED") @db.VarChar(12)
  nombre    String?    @db.VarChar(100)
  telefono  String?    @db.VarChar(50)
  empleado  empleado?
  empleador empleador?
  hace_uso  hace_uso[]
}

model proyecto {
  cedulaJuridica           String                @db.VarChar(12)
  nombre                   String                @db.VarChar(100)
  cantidadMaximaBeneficios Int?
  montoMaximoBeneficio     Float?
  frecuenciaPago           String?               @db.VarChar(10)
  moneda                   String?               @db.VarChar(3)
  fechaInicio              DateTime?             @db.Date
  fechaFin                 DateTime?             @db.Date
  fechaUltimoPago          DateTime?             @db.Date
  habilitado               Boolean?
  empresa                  empresa               @relation(fields: [cedulaJuridica], references: [cedulaJuridica], onDelete: Cascade, map: "FK__proyecto__cedula__76969D2E")
  beneficios               beneficios[]
  deduccionVoluntaria      deduccionVoluntaria[]
  esContratado             esContratado[]
  genera                   genera[]
  reporteHoras             reporteHoras[]

  @@id([cedulaJuridica, nombre], map: "PK__proyecto__BAB0B479904A2105")
}

model reporteHoras {
  cedulaEmpleado  String     @db.VarChar(12)
  cedulaEmpleador String?    @db.VarChar(12)
  cedulaJuridica  String?    @db.VarChar(12)
  nombreProyecto  String?    @db.VarChar(100)
  fechaHora       DateTime   @db.DateTime
  horasTrabajadas Float?
  estado          Int?
  empleado        empleado   @relation(fields: [cedulaEmpleado], references: [cedula], onUpdate: NoAction, map: "FK__reporteHo__cedul__14270015")
  empleador       empleador? @relation(fields: [cedulaEmpleador], references: [cedula], onDelete: NoAction, onUpdate: NoAction, map: "FK__reporteHo__cedul__151B244E")
  proyecto        proyecto?  @relation(fields: [cedulaJuridica, nombreProyecto], references: [cedulaJuridica, nombre], onDelete: Cascade, map: "FK__reporteHoras__160F4887")

  @@id([cedulaEmpleado, fechaHora], map: "PK__reporteH__626A902FEDC36001")
}

model selecciona {
  cedulaEmpleado  String     @db.VarChar(12)
  cedulaJuridica  String     @db.VarChar(12)
  nombreProyecto  String     @db.VarChar(100)
  nombreBeneficio String     @db.VarChar(100)
  empleado        empleado   @relation(fields: [cedulaEmpleado], references: [cedula], onUpdate: NoAction, map: "FK__seleccion__cedul__3864608B")
  beneficios      beneficios @relation(fields: [cedulaJuridica, nombreProyecto, nombreBeneficio], references: [cedulaJuridica, nombreProyecto, nombreBeneficio], onDelete: Cascade, map: "FK__selecciona__37703C52")

  @@id([cedulaEmpleado, cedulaJuridica, nombreProyecto, nombreBeneficio], map: "PK__seleccio__9645CB41FE73D6A5")
}
